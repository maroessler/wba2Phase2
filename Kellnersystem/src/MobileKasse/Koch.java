package MobileKasse;import java.awt.Color;import java.util.ArrayList;import java.util.List;import javax.swing.JButton;import javax.swing.JFrame;import javax.swing.JLabel;import javax.swing.JPanel;import org.jivesoftware.smackx.pubsub.Subscription;import com.kellnersystem.artikelliste.Artikelliste;import com.kellnersystem.artikelliste.Artikelliste.Artikel;import Listener.BestellungFertigListener;import Schnittstellen.*;
public class Koch {			public  XMPPSchnittstelle koch;	public RestSchnittstelle rskoch;	public JFrame jf;	public JPanel panel;	public  List<JButton> buttons = new ArrayList();	private String nameNode = "Küche";	public List<Artikel> artikelliste;	public Artikelliste artikel;	
	public Koch(JFrame jf, JPanel panel,String username,String passwort) throws Exception{		this.jf=jf;		this.panel = panel;		rskoch = new RestSchnittstelle();		try{			artikel = rskoch.getArtikel();					artikelliste = rskoch.getArtikel().getArtikel();		}catch(Exception e){			System.out.println("Artikel konnten nicht geladen werden");		}		Oberflaeche();
		koch = new XMPPSchnittstelle(username, passwort);		koch.login();				//Node erstellen		boolean vorhanden = false;		try{			if(koch.getNode("Kellner")!=null){				vorhanden = true;				}			}catch(Exception e){				vorhanden = false;			}		if(!vorhanden){			koch.NodeErzeugen("Kellner");		}								List<Subscription> list = koch.subscriptions();		if(list.size()==0){			koch.Nodesubscribe(nameNode, this);			System.out.println("für Node subscribt");		}else{				for(Subscription sub : list){					System.out.println("Node: "+sub.getNode());					koch.listenerAnmelden(nameNode,this);					System.out.println("Listener angemeldet");						}			}				buttonsZeichnen();		
	}	public void essenFertig()throws Exception{					}	public void nodeLöschen(String nodeName)throws Exception{		koch.NodeLöschen(nodeName);		System.out.println("Node gelöscht");			}	public void disconnect(){		koch.disconnect();	}	public void Oberflaeche(){		jf.setLayout(null);		panel = new JPanel();		panel.setSize(800, 600);		panel.setLayout(null);		panel.setVisible(true);		panel.setBackground(Color.BLUE);		JLabel ueberSchrift = new JLabel("Bestellungen:");		ueberSchrift.setBounds(300,0,150,50);		ueberSchrift.setVisible(true);		ueberSchrift.setBackground(Color.CYAN);		ueberSchrift.setOpaque(true);		panel.add(ueberSchrift);		jf.getContentPane().add(panel);		jf.repaint();	}	public void buttonsZeichnen(){		  int y = 50;    	  for(JButton jb : buttons){    		  jb.setBounds(0,y,800,100);    		  jb.setVisible(true);    		  panel.add(jb);    		  y += 100;    	  }    	      	  panel.repaint();    	  jf.repaint();	}

}
