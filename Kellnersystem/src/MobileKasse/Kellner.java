package MobileKasse;import java.awt.Color;import java.util.ArrayList;import java.util.List;import javax.swing.JButton;import javax.swing.JFrame;import javax.swing.JPanel;import org.jivesoftware.smackx.pubsub.Subscription;import Listener.TischListener;import Schnittstellen.RestSchnittstelle;import Schnittstellen.XMPPSchnittstelle;import com.kellnersystem.artikelliste.Artikelliste;import com.kellnersystem.artikelliste.Artikelliste.Artikel;import com.kellnersystem.main.Kellnersystem;import com.kellnersystem.main.Kellnersystem.Tisch;public class Kellner {		public XMPPSchnittstelle xmpkellner;	public RestSchnittstelle rskellner;	public JPanel panel;	public JFrame jf;	String nameNode = "Kellner";	public List<Artikel> artikelliste;	public Artikelliste artikel;	public Kellnersystem ks;	public List<Tisch> tische = new ArrayList<Tisch>();	
	public Kellner(JFrame jf, JPanel panel,String username,String passwort) throws Exception{		this.panel = panel;		this.jf = jf;				rskellner = new RestSchnittstelle();		xmpkellner = new XMPPSchnittstelle(username,passwort);		xmpkellner.login();		artikel = rskellner.getArtikel();		artikelliste = rskellner.getArtikel().getArtikel();		zeichneOberflaeche();				List<Subscription> list = xmpkellner.subscriptions();		if(list.size()==0){			xmpkellner.Nodesubscribe(nameNode,this);			System.out.println("für Node subscribt");		}else{				for(Subscription sub : list){					System.out.println("Node: "+sub.getNode());					xmpkellner.listenerAnmelden(nameNode,this);					System.out.println("Listener angemeldet");						}			}		
	}	public void zeichneOberflaeche(){		panel.removeAll();		int x = 0;		int y = 0;		for(int i = 0;i<9;i++){			JButton jb = new JButton(""+(i+1));			if(i%3==0){ y+=100; x = 100;}			jb.setBounds(x, y, 150, 80);			x += 200;			jb.setVisible(true);			jb.addActionListener(new TischListener(jb.getText(),this));			jb.setOpaque(true);			if(belegterTisch(i)){				jb.setBackground(Color.ORANGE);			}else{				jb.setBackground(Color.GREEN);			}			panel.add(jb);		}		panel.repaint();	}	public boolean belegterTisch(int id){			Kellnersystem ks = rskellner.getTisch();			tische = ks.getTisch();						for(Tisch tisch : tische){				if(tisch.getNummer()-1 == id) return true;			}			return false;	}	
}
